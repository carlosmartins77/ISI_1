//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFClientV2.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDB")]
    public interface IDB {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB/FindNif", ReplyAction="http://tempuri.org/IDB/FindNifResponse")]
        bool FindNif(string nif);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB/FindNif", ReplyAction="http://tempuri.org/IDB/FindNifResponse")]
        System.Threading.Tasks.Task<bool> FindNifAsync(string nif);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB/GetAllPessoas", ReplyAction="http://tempuri.org/IDB/GetAllPessoasResponse")]
        System.Data.DataSet GetAllPessoas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB/GetAllPessoas", ReplyAction="http://tempuri.org/IDB/GetAllPessoasResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllPessoasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB/RegistInfected", ReplyAction="http://tempuri.org/IDB/RegistInfectedResponse")]
        void RegistInfected(string nif);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB/RegistInfected", ReplyAction="http://tempuri.org/IDB/RegistInfectedResponse")]
        System.Threading.Tasks.Task RegistInfectedAsync(string nif);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB/RegistIsolated", ReplyAction="http://tempuri.org/IDB/RegistIsolatedResponse")]
        void RegistIsolated(string contacto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB/RegistIsolated", ReplyAction="http://tempuri.org/IDB/RegistIsolatedResponse")]
        System.Threading.Tasks.Task RegistIsolatedAsync(string contacto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB/RelatorioPSP", ReplyAction="http://tempuri.org/IDB/RelatorioPSPResponse")]
        void RelatorioPSP(string file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB/RelatorioPSP", ReplyAction="http://tempuri.org/IDB/RelatorioPSPResponse")]
        System.Threading.Tasks.Task RelatorioPSPAsync(string file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB/RelatorioGNR", ReplyAction="http://tempuri.org/IDB/RelatorioGNRResponse")]
        void RelatorioGNR(string file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB/RelatorioGNR", ReplyAction="http://tempuri.org/IDB/RelatorioGNRResponse")]
        System.Threading.Tasks.Task RelatorioGNRAsync(string file);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDBChannel : WCFClientV2.ServiceReference1.IDB, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBClient : System.ServiceModel.ClientBase<WCFClientV2.ServiceReference1.IDB>, WCFClientV2.ServiceReference1.IDB {
        
        public DBClient() {
        }
        
        public DBClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DBClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool FindNif(string nif) {
            return base.Channel.FindNif(nif);
        }
        
        public System.Threading.Tasks.Task<bool> FindNifAsync(string nif) {
            return base.Channel.FindNifAsync(nif);
        }
        
        public System.Data.DataSet GetAllPessoas() {
            return base.Channel.GetAllPessoas();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllPessoasAsync() {
            return base.Channel.GetAllPessoasAsync();
        }
        
        public void RegistInfected(string nif) {
            base.Channel.RegistInfected(nif);
        }
        
        public System.Threading.Tasks.Task RegistInfectedAsync(string nif) {
            return base.Channel.RegistInfectedAsync(nif);
        }
        
        public void RegistIsolated(string contacto) {
            base.Channel.RegistIsolated(contacto);
        }
        
        public System.Threading.Tasks.Task RegistIsolatedAsync(string contacto) {
            return base.Channel.RegistIsolatedAsync(contacto);
        }
        
        public void RelatorioPSP(string file) {
            base.Channel.RelatorioPSP(file);
        }
        
        public System.Threading.Tasks.Task RelatorioPSPAsync(string file) {
            return base.Channel.RelatorioPSPAsync(file);
        }
        
        public void RelatorioGNR(string file) {
            base.Channel.RelatorioGNR(file);
        }
        
        public System.Threading.Tasks.Task RelatorioGNRAsync(string file) {
            return base.Channel.RelatorioGNRAsync(file);
        }
    }
}
